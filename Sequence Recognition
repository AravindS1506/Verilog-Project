module top_module(
    input clk,
    input reset,    // Synchronous reset
    input in,
    output disc,
    output flag,
    output err);
    parameter [3:0] zero=4'd0,one=4'd1,two=4'd2,three=4'd3,four=4'd4,five=4'd5,six=4'd6,dis=4'd7,fl=4'd8,er=4'd9;
    reg [3:0] state,next_state;
    assign disc=(state==dis);
    assign flag=(state==fl);
    assign err=(state==er);
    always@(posedge clk) begin
        if(reset)
            state<=zero;
        else
            state<=next_state;
    end
    always@(*) begin
        case(state)
            zero:next_state=in?one:zero;
            one:next_state=in?two:zero;
            two:next_state=in?three:zero;
            three:next_state=in?four:zero;
            four:next_state=in?five:zero;
            five:next_state=in?six:dis;
            six:next_state=in?er:fl;
            dis:next_state=in?one:zero;
            fl:next_state=in?one:zero;
            er:next_state=in?er:zero;
        endcase
    end
endmodule
